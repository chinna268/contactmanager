{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextinputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","a","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginright","Contacts","Fragment","TextInputGroup","label","placeholder","onChange","error","htmlfor","classnames","defaultProps","AddContact","errors","onSubmit","e","preventDefault","newContact","post","history","push","target","EditContact","updContact","match","params","put","Header","branding","href","Test","test","body","fetch","then","response","json","title","App","exact","path","component","About","NotFound","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc1fd938.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\nconst reducer = (state, action ) =>\r\n{\r\n    switch(action.type)\r\n    {\r\n        case 'DELETE_CONTACT':\r\n        return {\r\n            ...state,\r\n            contacts: state.contacts.filter(\r\n                contact => contact.id !== action.payload\r\n            )\r\n        }\r\n        case 'ADD_CONTACT':\r\n        return {\r\n            ...state,\r\n            contacts: [action.payload,\r\n            ...state.contacts]\r\n        };\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts:state.contacts.map(contact => \r\n                    contact.id === action.payload.id \r\n                    ? (contact=action.payload)\r\n                    :contact)\r\n            }\r\n     default:\r\n         return state;\r\n    }\r\n}\r\nexport class Provider extends Component {\r\n    state = \r\n    {\r\n        contacts: \r\n             [\r\n\r\n            ],\r\n            dispatch: action => this.setState(state => \r\n                reducer(state,action))\r\n\r\n    }\r\n    async componentDidMount()\r\n    {\r\n        const res=await axios.get\r\n        ('https://jsonplaceholder.typicode.com/users')\r\n        this.setState({ contacts: res.data});\r\n\r\n        //.then(res => this.setState({contacts:res.data}))\r\n    }\r\n render() {\r\n     return (\r\n         <Context.Provider value={this.state}>\r\n         {this.props.children}\r\n         </Context.Provider>\r\n     )\r\n }\r\n}\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n// we can execute code of line 33 heer also\r\n//static keyword\r\nstate={\r\n    showContactInfo: false\r\n};\r\nonDeleteClick = async (id,dispatch) => {\r\n   // console.log('clicked')\r\ntry {\r\nawait axios.delete\r\n(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n   //.then(res => )\r\n   dispatch({type:'DELETE_CONTACT', payload: id});\r\n}\r\ncatch(e)\r\n{\r\n    dispatch({type:'DELETE_CONTACT', payload: id})\r\n} \r\n}\r\n\r\n    render() {\r\n           const {id,name,email,phone } =\r\n           this.props.contact;\r\n           const { showContactInfo } = this.state;\r\n        return (\r\n            <Consumer>\r\n                {value => \r\n                {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                <h4>\r\n                    {name}{' '}<i onClick={() => this.setState({\r\n                        showContactInfo:!this.state.showContactInfo })}\r\n                        className=\"fas fa-caret-down\"\r\n                        style={{cursor: 'Pointer'}}\r\n                        />\r\n                        <i className=\"fas fa-times\" \r\n                        style={{cursor: 'pointer',\r\n                        float:'right',color:'red'}}\r\n                        onClick={this.onDeleteClick.bind\r\n                             (this,id,dispatch)}\r\n                             />\r\n                             <Link to ={`contact/edit/${id}`}>\r\n                                 <i \r\n                                 className=\"fas fa-pencil-alt\"\r\n                                 style={{\r\n                                     cursor: 'pointer',\r\n                                     float:'right',\r\n                                     color:'black',\r\n                                     marginright: '1rem'\r\n                \r\n                                 }}\r\n                                 ></i>\r\n                                 </Link>\r\n                        \r\n                </h4>\r\n                {\r\n                    showContactInfo ? (<ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">Email:\r\n                    {email}</li>\r\n                    <li className=\"list-group-item\">phone:\r\n                    {phone}</li>\r\n                </ul>) : null}\r\n                \r\n            </div> \r\n                    )\r\n                }}\r\n                </Consumer>\r\n\r\n        )\r\n    }\r\n}\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n    \r\n    \r\n}\r\n\r\nexport default Contact;\r\n","//class based component\r\nimport React, { Component } from 'react'\r\nimport Contact from './Contact'\r\nimport { Consumer } from '../../context';\r\n\r\n class Contacts extends Component {\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\">\r\n                                <span className=\"text-danger\">Contact</span>List\r\n                            </h1>\r\n                        {\r\n                            contacts.map(contact => ( //for looping\r\n                                <Contact \r\n                                key={contact.id}\r\n                                contact={contact} \r\n                                />\r\n                            ))}\r\n                    </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\nexport default Contacts;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n\r\nconst TextInputGroup = (\r\n    {\r\n        label,\r\n        name,\r\n        value,\r\n        placeholder,\r\n        type,\r\n        onChange,\r\n        error\r\n    }) =>  {\r\n    return (\r\n        <div className=\"form-group\">\r\n                            <label htmlfor={name}>{label}</label>\r\n                            <input \r\n                            type={type}\r\n                            name={name}\r\n                            className={classnames('form-control form-control-lg',{'is-invalid':error})}\r\n                            placeholder={placeholder}\r\n                            value={value}\r\n                            onChange={onChange}\r\n                            />\r\n                            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n                    </div>\r\n                     \r\n    )\r\n}\r\nTextInputGroup.propTypes = {\r\n    label : PropTypes.string.isRequired,\r\n    name:PropTypes.string.isRequired,\r\n    placeholder:PropTypes.string.isRequired,\r\n    value:PropTypes.string.isRequired,\r\n    type:PropTypes.string.isRequired,\r\n    onChange:PropTypes.func.isRequired,\r\n    error: PropTypes.string.isRequired\r\n\r\n}\r\nTextInputGroup.defaultProps =\r\n{\r\n    type:'text'\r\n}\r\nexport default TextInputGroup;","import React, { Component } from 'react'\r\n//class based components\r\nimport {Consumer }  from  '../../context';\r\nimport TextInputGroup from '../layout/TextinputGroup';\r\n//import {v1 as uuid } from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email:'',\r\n        phone: '',\r\n        errors: {}\r\n\r\n    }\r\n    onSubmit = async (dispatch,e)=> {\r\n        e.preventDefault();\r\n        const { name,email,phone} = this.state;\r\n        //add errors\r\n        //checking errors\r\n        if(name === '')\r\n        {\r\n            this.setState({errors:{\r\n                name:'Name is required'\r\n            }});\r\n            return;\r\n        }\r\n        if(email === '')\r\n        {\r\n            this.setState({errors:{\r\n                email:'Email is required'\r\n            }});\r\n            return;\r\n        }\r\n        if(phone === '')\r\n        {\r\n            this.setState({errors:{\r\n                phone:'phone-num is required'\r\n            }});\r\n            return;\r\n        }\r\n        const newContact ={\r\n           // id: uuid(),\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\nconst res =await axios.post('https://jsonplaceholder.typicode.com/users',\r\nnewContact)\r\ndispatch({ type:'ADD_CONTACT',\r\npayload: res.data })\r\n\r\n        //dispatch({type: 'ADD_CONTACT',payload:\r\n    //newContact})\r\n//clear state\r\n    this.setState({\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        errors: {}\r\n    })\r\n    this.props.history.push('/'); //redirecting to home after adding\r\n    }\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value});\r\n    //onEmailChange = (e) => this.setState({email: e.target.value});\r\n    //onPhoneChange = (e) => this.setState({Phone: e.target.value});\r\n\r\n    render() { \r\n    \r\n        const { name,email,phone,errors}=this.state;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch} = value;\r\n                    return(\r\n                        <div className=\"card mb-3\">\r\n                <div className=\"card-header\">\r\n        Add Contact\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={this.onSubmit.bind\r\n                        (this,dispatch)}>\r\n                        <TextInputGroup\r\n                        label=\"Name\"\r\n                        name=\"name\"\r\n                        placeholder=\"Enter Name\"\r\n                        value={name}\r\n                        onChange={this.onChange}\r\n                        error={errors.name}\r\n                        />\r\n                  <TextInputGroup\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        placeholder=\"Enter Email\"\r\n                        value={email}\r\n                        onChange={this.onChange}\r\n                        error={errors.email}\r\n                        />\r\n                        <TextInputGroup\r\n                        label=\"phone\"\r\n                        name=\"phone\"\r\n                        placeholder=\"Enter phone\"\r\n                        value={phone}\r\n                        onChange={this.onChange}\r\n                        error={errors.phone}\r\n                        />\r\n\r\n                    <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-dark btn-block\"\r\n                    />\r\n                    \r\n                    </form>\r\n                </div>\r\n            </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\nexport default AddContact;\r\n","import React, { Component } from 'react'\r\n//class based components\r\nimport {Consumer }  from  '../../context';\r\nimport TextInputGroup from '../layout/TextinputGroup';\r\n//import {v1 as uuid } from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email:'',\r\n        phone: '',\r\n        errors: {}\r\n\r\n    }\r\n    async componentDidMount() {\r\n        const {id} =this.props.match.params;\r\n        const res =await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n        const contact =res.data;\r\n        this.setState ({\r\n            name:contact.name,\r\n            email:contact.email,\r\n            phone:contact.phone\r\n        })\r\n\r\n    }\r\n    onSubmit = async (dispatch,e)=> {\r\n        e.preventDefault();\r\n\r\n        const { name,email,phone} = this.state;\r\n        //add errors word in line 30\r\n        //checking errors\r\n        if(name === '')\r\n        {\r\n            this.setState({errors:{\r\n                name:'Name is required'\r\n            }});\r\n            return;\r\n        }\r\n        if(email === '')\r\n        {\r\n            this.setState({errors:{\r\n                email:'Email is required'\r\n            }});\r\n            return;\r\n        }\r\n        if(phone === '')\r\n        {\r\n            this.setState({errors:{\r\n                phone:'phone-num is required'\r\n            }});\r\n            return;\r\n        }\r\n\r\n        const updContact = {\r\n            name,\r\n          email,\r\n          phone\r\n\r\n        }\r\n        const {id} = this.props.match.params;\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updContact);\r\n        dispatch({type:'UPDATE_CONTACT',payload:\r\n    res.data});\r\n        \r\n        //clear state\r\n    this.setState({\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        errors: {}\r\n    })\r\n    this.props.history.push('/'); //redirecting to home after adding\r\n    }\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value});\r\n    //onEmailChange = (e) => this.setState({email: e.target.value});\r\n    //onPhoneChange = (e) => this.setState({Phone: e.target.value});\r\n\r\n    render() { \r\n    \r\n        const { name,email,phone,errors}=this.state;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch} = value;\r\n                    return(\r\n                        <div className=\"card mb-3\">\r\n                <div className=\"card-header\">Edit\r\n                Contact\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={this.onSubmit.bind\r\n                        (this,dispatch)}>\r\n                        <TextInputGroup\r\n                        label=\"Name\"\r\n                        name=\"name\"\r\n                        placeholder=\"Enter Name\"\r\n                        value={name}\r\n                        onChange={this.onChange}\r\n                        error={errors.name}\r\n                        />\r\n                  <TextInputGroup\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        placeholder=\"Enter Email\"\r\n                        value={email}\r\n                        onChange={this.onChange}\r\n                        error={errors.email}\r\n                        />\r\n                        <TextInputGroup\r\n                        label=\"phone\"\r\n                        name=\"phone\"\r\n                        placeholder=\"Enter phone\"\r\n                        value={phone}\r\n                        onChange={this.onChange}\r\n                        error={errors.phone}\r\n                        />\r\n\r\n                    <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-dark btn-block\"\r\n                    />\r\n                    \r\n                    </form>\r\n                </div>\r\n            </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\nexport default EditContact;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Header = (props) => {  //arrow function\r\n    const { branding } = props;\r\n    return (\r\n    <nav className=\"navbar navbar-expand-sm \r\n    navbar-dark bg-danger mb-3 py-0\"> \r\n    <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n        <div>\r\n            <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/\" className=\"nav-link\">\r\n                    \r\n                 <i className=\"fas fa-home\"></i>Home\r\n\r\n                </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/contact/add\" className=\"nav-link\">\r\n                    \r\n                <i className=\"fas fa-plus\"></i>Add\r\n\r\n                </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/about\" className=\"nav-link\">\r\n                    \r\n                <i className=\"fas fa-question\"></i>About\r\n\r\n                </Link>\r\n            </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</nav>\r\n\r\n    )\r\n}\r\nHeader.defaultProps = {\r\n    branding:'My App'\r\n}\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n}\r\nexport default Header;","import React from 'react'\r\n\r\nexport default ()=> {\r\n    return (\r\n        <div>\r\n            <h1\r\n              className=\"display-4\"> About Contact Manager\r\n            </h1>\r\n            <p className=\"lead\">Simple app to manage to contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    );\r\n};\r\n ","import React from 'react'\r\n\r\nexport default () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"><span className=\"text-danger\">\r\n                404</span> Page Not found</h1>\r\n            <p className=\"lead\">Sorry,that page does not exist</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\n class Test extends Component {\r\n     state ={\r\n         test:'',\r\n         body:''\r\n     };\r\n     componentDidMount()\r\n     {\r\n         //console.log('componentDidMount...');\r\n         fetch\r\n         ('https://jsonplaceholder.typicode.com/todos/1')\r\n  .then(response => response.json())\r\n  .then(data =>  this.setState({\r\n      title:data.title,\r\n      body:data.body\r\n  }) )\r\n     }\r\n \r\n\r\n    render() {\r\n        const { title, body } =this.state;\r\n        return (\r\n        <div>\r\n            <h1>{title}</h1>\r\n            <p>{body}</p>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default Test;","import React ,{ Component } from 'react';\nimport { HashRouter as Router,Route,Switch} from \n'react-router-dom';\n\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nimport './App.css';\n \n\nclass App extends Component {\n  //moved slightly righr side of component box\n  render() \n  {\n  return (\n    <Provider>\n      <Router>\n    <div className=\"App\">\n       <Header branding=\"Contact Manager\"/>\n       <div className=\"container\">\n    <Switch>\n      <Route exact path=\"/\" component=\n      {Contacts}/>\n      <Route exact path=\"/contact/add\" component=\n      {AddContact}/>\n      <Route exact\n       path=\"/contact/edit/:id\" component=\n      {EditContact}/>\n      <Route exact path=\"/about\" component=\n      {About}/>\n      <Route exact path=\"/test\" component=\n      {Test}/>\n      \n      <Route component=\n      {NotFound}/>\n\n    </Switch>\n       </div>\n    </div>\n    </Router>\n    </Provider>\n  );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}